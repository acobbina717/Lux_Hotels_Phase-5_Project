{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nfunction useId(idOverride) {\n  const [defaultId, setDefaultId] = useState(idOverride);\n  const id = idOverride || defaultId;\n  useEffect(() => {\n    if (defaultId == null) {\n      setDefaultId(`uitk-${Math.round(Math.random() * 1e5)}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\nexport { useId };","map":{"version":3,"mappings":";;AAEO,SAASA,KAAT,CAAeC,UAAf,EAA4C;QAC3C,YAAUC,YAAV,IAAwBC,QAAY;EAC1C,QAAMC,GAAEH,UAAa,aAArB;EACAI,gBAAgB;QACdC,SAAIA,IAAS,MAAI;kBAC8B;;GAFjDD,GAKIH,UALJG;SAOGD","names":["useId","idOverride","setDefaultId","useState","id","useEffect","defaultId"],"sources":["/Users/forgi/Development/code/phase-5/lux_nyc_final_project/lux_nyc_react_frontend/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/src/utils/useId.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport function useId(idOverride?: string): string {\n  const [defaultId, setDefaultId] = useState(idOverride);\n  const id = idOverride || defaultId;\n  useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the random value for client-side rendering only.\n      // We can't use it server-side.\n      setDefaultId(`uitk-${Math.round(Math.random() * 1e5)}`);\n    }\n  }, [defaultId]);\n  return id as string;\n}\n"]},"metadata":{},"sourceType":"module"}