{"ast":null,"code":"import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useEffect } from 'react';\nimport { useAriaAnnouncer } from './useAriaAnnouncer.js';\n\nconst AriaAnnounce = _ref => {\n  let {\n    announcement\n  } = _ref;\n  const {\n    announce\n  } = useAriaAnnouncer();\n  useEffect(() => {\n    if (announcement) {\n      announce(announcement);\n    }\n  }, [announce, announcement]);\n  return /* @__PURE__ */jsx(Fragment, {});\n};\n\nexport { AriaAnnounce };","map":{"version":3,"mappings":";;;;AAWO,MAAMA,YAAY,GAAqC,QAExD;EAAA,IAFyD;IAC7DC;EAD6D,CAEzD;EACJ;IAAMC;EAAN,IAAkBC,gBAAGA,EAArB;EAEAC,gBAAgB;IACd;cACU;IACT;GAHHA,EAIC,wBAJDA;wBAMgFC;AAChF,CAZK","names":["AriaAnnounce","announcement","announce","useAriaAnnouncer","useEffect","_jsx"],"sources":["/Users/forgi/Development/code/phase-5/lux_nyc_final_project/lux_nyc_react_frontend/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/src/aria-announcer/AriaAnnounce.tsx"],"sourcesContent":["import { ComponentType, useEffect } from \"react\";\n\nimport { useAriaAnnouncer } from \"./useAriaAnnouncer\";\n\nexport interface AriaAnnounceProps {\n  /**\n   * String which will be announced by screen readers on change\n   */\n  announcement?: string;\n}\n\nexport const AriaAnnounce: ComponentType<AriaAnnounceProps> = ({\n  announcement,\n}) => {\n  const { announce } = useAriaAnnouncer();\n\n  useEffect(() => {\n    if (announcement) {\n      announce(announcement);\n    }\n  }, [announce, announcement]);\n\n  // If we return null here, react-docgen wouldn't be able to locate the component\n  return <></>;\n};\n"]},"metadata":{},"sourceType":"module"}