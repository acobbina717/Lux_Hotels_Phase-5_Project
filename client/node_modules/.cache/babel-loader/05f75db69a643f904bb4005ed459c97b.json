{"ast":null,"code":"import React, { forwardRef, useRef, useState } from 'react';\nimport { useMantineDefaultProps, extractSystemStyles, InputWrapper, Input, CloseButton } from '@mantine/core';\nimport { useUuid, useDidUpdate, useMergedRef } from '@mantine/hooks';\nimport { TimeField } from '../TimeInputBase/TimeField/TimeField.js';\nimport { createTimeHandler } from '../TimeInputBase/create-time-handler/create-time-handler.js';\nimport useStyles from './TimeInput.styles.js';\nimport { AmPmInput } from '../TimeInputBase/AmPmInput/AmPmInput.js';\nimport { createAmPmHandler } from '../TimeInputBase/create-amPm-handler/create-amPm-handler.js';\nimport { getDate } from '../TimeInputBase/get-date/get-date.js';\nimport { getTimeValues } from '../TimeInputBase/get-time-values/get-time-value.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst RIGHT_SECTION_WIDTH = {\n  xs: 24,\n  sm: 30,\n  md: 34,\n  lg: 40,\n  xl: 44\n};\nconst defaultProps = {\n  size: \"sm\",\n  withSeconds: false,\n  clearable: false,\n  format: \"24\",\n  amLabel: \"am\",\n  pmLabel: \"pm\",\n  timePlaceholder: \"--\",\n  amPmPlaceholder: \"am\",\n  disabled: false\n};\nconst TimeInput = forwardRef((props, ref) => {\n  const _a = useMantineDefaultProps(\"TimeInput\", defaultProps, props),\n        {\n    required,\n    label,\n    error,\n    description,\n    className,\n    style,\n    size,\n    wrapperProps,\n    classNames,\n    styles,\n    id,\n    value,\n    defaultValue,\n    onChange,\n    withSeconds,\n    clearable,\n    clearButtonLabel,\n    format,\n    amLabel,\n    pmLabel,\n    name,\n    hoursLabel,\n    minutesLabel,\n    secondsLabel,\n    amPmLabel,\n    timePlaceholder,\n    amPmPlaceholder,\n    disabled,\n    sx,\n    nextRef,\n    labelProps,\n    descriptionProps,\n    errorProps\n  } = _a,\n        others = __objRest(_a, [\"required\", \"label\", \"error\", \"description\", \"className\", \"style\", \"size\", \"wrapperProps\", \"classNames\", \"styles\", \"id\", \"value\", \"defaultValue\", \"onChange\", \"withSeconds\", \"clearable\", \"clearButtonLabel\", \"format\", \"amLabel\", \"pmLabel\", \"name\", \"hoursLabel\", \"minutesLabel\", \"secondsLabel\", \"amPmLabel\", \"timePlaceholder\", \"amPmPlaceholder\", \"disabled\", \"sx\", \"nextRef\", \"labelProps\", \"descriptionProps\", \"errorProps\"]);\n\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    size\n  }, {\n    classNames,\n    styles,\n    name: \"TimeInput\"\n  });\n  const {\n    systemStyles,\n    rest\n  } = extractSystemStyles(others);\n  const uuid = useUuid(id);\n  const hoursRef = useRef();\n  const minutesRef = useRef();\n  const secondsRef = useRef();\n  const amPmRef = useRef();\n  const [time, setTime] = useState(getTimeValues(value || defaultValue, format, amLabel, pmLabel));\n  const [_value, setValue] = useState(value || defaultValue);\n  useDidUpdate(() => {\n    setTime(getTimeValues(_value, format, amLabel, pmLabel));\n  }, [_value, format, amLabel, pmLabel]);\n  useDidUpdate(() => {\n    if ((value == null ? void 0 : value.getTime()) !== (_value == null ? void 0 : _value.getTime())) {\n      setValue(value);\n    }\n  }, [value]);\n\n  const setDate = change => {\n    const timeWithChange = __spreadValues(__spreadValues({}, time), change);\n\n    const newDate = getDate(timeWithChange.hours, timeWithChange.minutes, timeWithChange.seconds, format, pmLabel, timeWithChange.amPm);\n    setValue(newDate);\n    typeof onChange === \"function\" && onChange(newDate);\n  };\n\n  const handleHoursChange = createTimeHandler({\n    onChange: (val, carryOver) => {\n      setDate({\n        hours: val,\n        minutes: carryOver != null ? carryOver : time.minutes\n      });\n    },\n    min: format === \"12\" ? 1 : 0,\n    max: format === \"12\" ? 12 : 23,\n    nextRef: minutesRef,\n    nextMax: 59\n  });\n  const handleMinutesChange = createTimeHandler({\n    onChange: (val, carryOver) => {\n      setDate({\n        minutes: val,\n        seconds: carryOver != null ? carryOver : time.seconds\n      });\n    },\n    min: 0,\n    max: 59,\n    nextRef: withSeconds ? secondsRef : format === \"12\" ? amPmRef : nextRef,\n    nextMax: withSeconds ? 59 : void 0\n  });\n  const handleSecondsChange = createTimeHandler({\n    onChange: val => {\n      setDate({\n        seconds: val\n      });\n    },\n    min: 0,\n    max: 59,\n    nextRef: format === \"12\" ? amPmRef : nextRef\n  });\n  const handleAmPmChange = createAmPmHandler({\n    amLabel,\n    pmLabel,\n    onChange: val => {\n      setDate({\n        amPm: val\n      });\n    },\n    nextRef\n  });\n\n  const handleClear = () => {\n    setTime({\n      hours: \"\",\n      minutes: \"\",\n      seconds: \"\",\n      amPm: \"\"\n    });\n    setValue(null);\n    onChange == null ? void 0 : onChange(null);\n    hoursRef.current.focus();\n  };\n\n  const rightSection = clearable && _value ? /* @__PURE__ */React.createElement(CloseButton, {\n    variant: \"transparent\",\n    \"aria-label\": clearButtonLabel,\n    onClick: handleClear,\n    size\n  }) : null;\n  return /* @__PURE__ */React.createElement(InputWrapper, __spreadValues(__spreadValues({\n    required,\n    label,\n    error,\n    description,\n    className,\n    style,\n    classNames,\n    styles,\n    size,\n    __staticSelector: \"TimeInput\",\n    id: uuid,\n    sx,\n    errorProps,\n    descriptionProps,\n    labelProps\n  }, systemStyles), wrapperProps), /* @__PURE__ */React.createElement(Input, __spreadValues({\n    component: \"div\",\n    __staticSelector: \"TimeInput\",\n    required,\n    invalid: !!error,\n    onClick: () => hoursRef.current.focus(),\n    size,\n    className: cx({\n      [classes.disabled]: disabled\n    }),\n    classNames,\n    styles,\n    disabled,\n    rightSection,\n    rightSectionWidth: theme.fn.size({\n      size,\n      sizes: RIGHT_SECTION_WIDTH\n    })\n  }, rest), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.controls\n  }, /* @__PURE__ */React.createElement(TimeField, {\n    ref: useMergedRef(hoursRef, ref),\n    value: time.hours,\n    onChange: handleHoursChange,\n    setValue: val => setTime(current => __spreadProps(__spreadValues({}, current), {\n      hours: val\n    })),\n    id: uuid,\n    className: classes.timeInput,\n    withSeparator: true,\n    size,\n    max: format === \"12\" ? 12 : 23,\n    placeholder: timePlaceholder,\n    \"aria-label\": hoursLabel,\n    disabled,\n    name\n  }), /* @__PURE__ */React.createElement(TimeField, {\n    ref: minutesRef,\n    value: time.minutes,\n    onChange: handleMinutesChange,\n    setValue: val => setTime(current => __spreadProps(__spreadValues({}, current), {\n      minutes: val\n    })),\n    className: classes.timeInput,\n    withSeparator: withSeconds,\n    size,\n    max: 59,\n    placeholder: timePlaceholder,\n    \"aria-label\": minutesLabel,\n    disabled\n  }), withSeconds && /* @__PURE__ */React.createElement(TimeField, {\n    ref: secondsRef,\n    value: time.seconds,\n    onChange: handleSecondsChange,\n    setValue: val => setTime(current => __spreadProps(__spreadValues({}, current), {\n      seconds: val\n    })),\n    className: classes.timeInput,\n    size,\n    max: 59,\n    placeholder: timePlaceholder,\n    \"aria-label\": secondsLabel,\n    disabled\n  }), format === \"12\" && /* @__PURE__ */React.createElement(AmPmInput, {\n    ref: amPmRef,\n    value: time.amPm,\n    onChange: handleAmPmChange,\n    placeholder: amPmPlaceholder,\n    amLabel,\n    pmLabel,\n    size,\n    \"aria-label\": amPmLabel,\n    disabled\n  }))));\n});\nTimeInput.displayName = \"@mantine/dates/TimeInput\";\nexport { TimeInput };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","RIGHT_SECTION_WIDTH","xs","sm","md","lg","xl","defaultProps","size","withSeconds","clearable","format","amLabel","pmLabel","timePlaceholder","amPmPlaceholder","disabled","TimeInput","forwardRef","props","ref","_a","useMantineDefaultProps","required","label","error","description","className","style","wrapperProps","classNames","styles","id","defaultValue","onChange","clearButtonLabel","name","hoursLabel","minutesLabel","secondsLabel","amPmLabel","sx","nextRef","labelProps","descriptionProps","errorProps","others","classes","cx","theme","useStyles","systemStyles","rest","extractSystemStyles","uuid","useUuid","hoursRef","useRef","minutesRef","secondsRef","amPmRef","time","setTime","useState","getTimeValues","_value","setValue","useDidUpdate","getTime","setDate","change","timeWithChange","newDate","getDate","hours","minutes","seconds","amPm","handleHoursChange","createTimeHandler","val","carryOver","min","max","nextMax","handleMinutesChange","handleSecondsChange","handleAmPmChange","createAmPmHandler","handleClear","current","focus","rightSection","React","createElement","CloseButton","variant","onClick","InputWrapper","__staticSelector","Input","component","invalid","rightSectionWidth","fn","sizes","controls","TimeField","useMergedRef","timeInput","withSeparator","placeholder","AmPmInput","displayName"],"sources":["/Users/forgi/Desktop/LuxNyc/LuxNycRailsApi/client/node_modules/@mantine/dates/src/components/TimeInput/TimeInput.tsx"],"sourcesContent":["import React, { useState, useRef, forwardRef } from 'react';\nimport {\n  InputBaseProps,\n  InputWrapperBaseProps,\n  InputStylesNames,\n  InputWrapperStylesNames,\n  DefaultProps,\n  Input,\n  InputWrapper,\n  MantineSize,\n  Selectors,\n  CloseButton,\n  extractSystemStyles,\n  useMantineDefaultProps,\n} from '@mantine/core';\nimport { useDidUpdate, useMergedRef, useUuid } from '@mantine/hooks';\nimport { TimeField } from '../TimeInputBase/TimeField/TimeField';\nimport { createTimeHandler } from '../TimeInputBase/create-time-handler/create-time-handler';\nimport useStyles from './TimeInput.styles';\nimport { AmPmInput } from '../TimeInputBase/AmPmInput/AmPmInput';\nimport { createAmPmHandler } from '../TimeInputBase/create-amPm-handler/create-amPm-handler';\nimport { getDate } from '../TimeInputBase/get-date/get-date';\nimport { getTimeValues } from '../TimeInputBase/get-time-values/get-time-value';\n\nexport type TimeInputStylesNames =\n  | Selectors<typeof useStyles>\n  | InputStylesNames\n  | InputWrapperStylesNames;\n\nexport interface TimeInputProps\n  extends DefaultProps<TimeInputStylesNames>,\n    InputBaseProps,\n    InputWrapperBaseProps,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'onChange' | 'value' | 'defaultValue'> {\n  /** Input size */\n  size?: MantineSize;\n\n  /** Controlled input value */\n  value?: Date | null;\n\n  /** Uncontrolled input default value */\n  defaultValue?: Date | null;\n\n  /** Controlled input onChange handler */\n  onChange?(value: Date): void;\n\n  /** Display seconds input */\n  withSeconds?: boolean;\n\n  /** Allow to clear item */\n  clearable?: boolean;\n\n  /** aria-label for clear button */\n  clearButtonLabel?: string;\n\n  /** Time format */\n  format?: '12' | '24';\n\n  /** Label for 'am' */\n  amLabel?: string;\n\n  /** Label for 'pm' */\n  pmLabel?: string;\n\n  /** Uncontrolled input name */\n  name?: string;\n\n  /** aria-label for hours input */\n  hoursLabel?: string;\n\n  /** aria-label for minutes input */\n  minutesLabel?: string;\n\n  /** aria-label for seconds input */\n  secondsLabel?: string;\n\n  /** aria-label for am/pm input */\n  amPmLabel?: string;\n\n  /** Placeholder for hours/minutes/seconds inputs*/\n  timePlaceholder?: string;\n\n  /** Placeholder for am/pm input */\n  amPmPlaceholder?: string;\n\n  /** Disable field */\n  disabled?: boolean;\n\n  /** Ref to focus after final TimeInput field. Used by TimeRangeInput */\n  nextRef?: React.RefObject<HTMLInputElement>;\n}\n\nconst RIGHT_SECTION_WIDTH = {\n  xs: 24,\n  sm: 30,\n  md: 34,\n  lg: 40,\n  xl: 44,\n};\n\nconst defaultProps: Partial<TimeInputProps> = {\n  size: 'sm',\n  withSeconds: false,\n  clearable: false,\n  format: '24',\n  amLabel: 'am',\n  pmLabel: 'pm',\n  timePlaceholder: '--',\n  amPmPlaceholder: 'am',\n  disabled: false,\n};\n\nexport const TimeInput = forwardRef<HTMLInputElement, TimeInputProps>(\n  (props: TimeInputProps, ref) => {\n    const {\n      required,\n      label,\n      error,\n      description,\n      className,\n      style,\n      size,\n      wrapperProps,\n      classNames,\n      styles,\n      id,\n      value,\n      defaultValue,\n      onChange,\n      withSeconds,\n      clearable,\n      clearButtonLabel,\n      format,\n      amLabel,\n      pmLabel,\n      name,\n      hoursLabel,\n      minutesLabel,\n      secondsLabel,\n      amPmLabel,\n      timePlaceholder,\n      amPmPlaceholder,\n      disabled,\n      sx,\n      nextRef,\n      labelProps,\n      descriptionProps,\n      errorProps,\n      ...others\n    } = useMantineDefaultProps('TimeInput', defaultProps, props);\n\n    const { classes, cx, theme } = useStyles({ size }, { classNames, styles, name: 'TimeInput' });\n    const { systemStyles, rest } = extractSystemStyles(others);\n    const uuid = useUuid(id);\n\n    const hoursRef = useRef<HTMLInputElement>();\n    const minutesRef = useRef<HTMLInputElement>();\n    const secondsRef = useRef<HTMLInputElement>();\n    const amPmRef = useRef<HTMLInputElement>();\n    const [time, setTime] = useState<{\n      hours: string;\n      minutes: string;\n      seconds: string;\n      amPm: string;\n    }>(getTimeValues(value || defaultValue, format, amLabel, pmLabel));\n    const [_value, setValue] = useState<Date | null>(value || defaultValue);\n\n    useDidUpdate(() => {\n      setTime(getTimeValues(_value, format, amLabel, pmLabel));\n    }, [_value, format, amLabel, pmLabel]);\n\n    // Allow controlled value prop to override internal _value\n    useDidUpdate(() => {\n      if (value?.getTime() !== _value?.getTime()) {\n        setValue(value);\n      }\n    }, [value]);\n\n    const setDate = (change: Partial<typeof time>) => {\n      const timeWithChange = { ...time, ...change };\n      const newDate = getDate(\n        timeWithChange.hours,\n        timeWithChange.minutes,\n        timeWithChange.seconds,\n        format,\n        pmLabel,\n        timeWithChange.amPm\n      );\n      setValue(newDate);\n      typeof onChange === 'function' && onChange(newDate);\n    };\n\n    const handleHoursChange = createTimeHandler({\n      onChange: (val, carryOver) => {\n        setDate({\n          hours: val,\n          minutes: carryOver ?? time.minutes,\n        });\n      },\n      min: format === '12' ? 1 : 0,\n      max: format === '12' ? 12 : 23,\n      nextRef: minutesRef,\n      nextMax: 59,\n    });\n\n    const handleMinutesChange = createTimeHandler({\n      onChange: (val, carryOver) => {\n        setDate({\n          minutes: val,\n          seconds: carryOver ?? time.seconds,\n        });\n      },\n      min: 0,\n      max: 59,\n      nextRef: withSeconds ? secondsRef : format === '12' ? amPmRef : nextRef,\n      nextMax: withSeconds ? 59 : undefined,\n    });\n\n    const handleSecondsChange = createTimeHandler({\n      onChange: (val) => {\n        setDate({ seconds: val });\n      },\n      min: 0,\n      max: 59,\n      nextRef: format === '12' ? amPmRef : nextRef,\n    });\n\n    const handleAmPmChange = createAmPmHandler({\n      amLabel,\n      pmLabel,\n      onChange: (val) => {\n        setDate({ amPm: val });\n      },\n      nextRef,\n    });\n\n    const handleClear = () => {\n      setTime({ hours: '', minutes: '', seconds: '', amPm: '' });\n      setValue(null);\n      onChange?.(null);\n      hoursRef.current.focus();\n    };\n\n    const rightSection =\n      clearable && _value ? (\n        <CloseButton\n          variant=\"transparent\"\n          aria-label={clearButtonLabel}\n          onClick={handleClear}\n          size={size}\n        />\n      ) : null;\n\n    return (\n      <InputWrapper\n        required={required}\n        label={label}\n        error={error}\n        description={description}\n        className={className}\n        style={style}\n        classNames={classNames}\n        styles={styles}\n        size={size}\n        __staticSelector=\"TimeInput\"\n        id={uuid}\n        sx={sx}\n        errorProps={errorProps}\n        descriptionProps={descriptionProps}\n        labelProps={labelProps}\n        {...systemStyles}\n        {...wrapperProps}\n      >\n        <Input\n          component=\"div\"\n          __staticSelector=\"TimeInput\"\n          required={required}\n          invalid={!!error}\n          onClick={() => hoursRef.current.focus()}\n          size={size}\n          className={cx({ [classes.disabled]: disabled })}\n          classNames={classNames}\n          styles={styles}\n          disabled={disabled}\n          rightSection={rightSection}\n          rightSectionWidth={theme.fn.size({ size, sizes: RIGHT_SECTION_WIDTH })}\n          {...rest}\n        >\n          <div className={classes.controls}>\n            <TimeField\n              ref={useMergedRef(hoursRef, ref)}\n              value={time.hours}\n              onChange={handleHoursChange}\n              setValue={(val) => setTime((current) => ({ ...current, hours: val }))}\n              id={uuid}\n              className={classes.timeInput}\n              withSeparator\n              size={size}\n              max={format === '12' ? 12 : 23}\n              placeholder={timePlaceholder}\n              aria-label={hoursLabel}\n              disabled={disabled}\n              name={name}\n            />\n            <TimeField\n              ref={minutesRef}\n              value={time.minutes}\n              onChange={handleMinutesChange}\n              setValue={(val) => setTime((current) => ({ ...current, minutes: val }))}\n              className={classes.timeInput}\n              withSeparator={withSeconds}\n              size={size}\n              max={59}\n              placeholder={timePlaceholder}\n              aria-label={minutesLabel}\n              disabled={disabled}\n            />\n            {withSeconds && (\n              <TimeField\n                ref={secondsRef}\n                value={time.seconds}\n                onChange={handleSecondsChange}\n                setValue={(val) => setTime((current) => ({ ...current, seconds: val }))}\n                className={classes.timeInput}\n                size={size}\n                max={59}\n                placeholder={timePlaceholder}\n                aria-label={secondsLabel}\n                disabled={disabled}\n              />\n            )}\n            {format === '12' && (\n              <AmPmInput\n                ref={amPmRef}\n                value={time.amPm}\n                onChange={handleAmPmChange}\n                placeholder={amPmPlaceholder}\n                amLabel={amLabel}\n                pmLabel={pmLabel}\n                size={size}\n                aria-label={amPmLabel}\n                disabled={disabled}\n              />\n            )}\n          </div>\n        </Input>\n      </InputWrapper>\n    );\n  }\n);\n\nTimeInput.displayName = '@mantine/dates/TimeInput';\n"]},"metadata":{},"sourceType":"module"}