{"ast":null,"code":"import { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport cx from 'classnames';\nimport './FormGroup.css.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst baseName = \"uitkFormGroup\";\nconst FormGroup = /* @__PURE__ */forwardRef(function FormGroup2(_a, ref) {\n  var _b = _a,\n      {\n    className,\n    row\n  } = _b,\n      other = __objRest(_b, [\"className\", \"row\"]);\n\n  return /* @__PURE__ */jsx(\"div\", __spreadValues({\n    className: cx(baseName, {\n      [`${baseName}-row`]: row\n    }, className),\n    ref\n  }, other));\n});\nexport { FormGroup };","map":{"version":3,"mappings":";;;;AAAA;AAAA,IAASA,mBAAkC,+BAA3C;AACA,IAAOC,YAAQ,oBAAaC,cAA5B;AAEA,yBAAyB,UAAzB,CAAyBC,oBAAzB;;AASA,IAAMC,eAAW,cAAgBC,KAAhB,KAAgBC;EAAAC;EAAAC;EAAAC;EAAAJ;AAAA,qBAAjC;;AAEA,IAAOK,kBAAeC,CAAf,EAAkBX,CAAlB,KAAkBA;EAErB,uBACEY,MADF,GAEIC,gBAAWZ,CAAEa,IAAbD,CAAcT,CAAdS,EAAcT,IAAdS,kBAAsC,IAACE,IAAD,EAAOH,EAAEI,IAAF,CAAP;;EAAc,yBACpDC,SAAKA,IAALA,IAAQC,sBAARD,EAAQ;IACP,gBAAQ,KAAR,CAAQL,CAAR,EAAQG,IAAR,GAEHI;EAEJ;;CAVF","names":["forwardRef","cx","hasOwnProperty","propertyIsEnumerable","baseName","value","key","enumerable","configurable","writable","__spreadValues","a","b","className","call","prop","row","ref","__getOwnPropSymbols","__defNormalProp"],"sources":["/Users/forgi/Development/code/phase-5/lux_nyc_final_project/lux_nyc_react_frontend/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/src/form-group/FormGroup.tsx"],"sourcesContent":["import { forwardRef, HTMLAttributes } from \"react\";\nimport cx from \"classnames\";\n\nimport \"./FormGroup.css\";\n\nexport interface FormGroupProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Display group of elements in a compact row.\n   */\n  row?: boolean;\n}\n\nconst baseName = \"uitkFormGroup\";\n\nexport const FormGroup = forwardRef<HTMLDivElement, FormGroupProps>(\n  function FormGroup({ className, row, ...other }, ref) {\n    return (\n      <div\n        className={cx(baseName, { [`${baseName}-row`]: row }, className)}\n        ref={ref}\n        {...other}\n      />\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}