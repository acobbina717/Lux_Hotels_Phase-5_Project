{"ast":null,"code":"var _jsxFileName = \"/Users/forgi/Development/code/phase-5/lux_nyc_final_project/lux_nyc_react_frontend/src/Components/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Segment } from \"semantic-ui-react\";\nimport { useForm } from \"@mantine/hooks\";\nimport { TextInput, PasswordInput, Popover } from \"@mantine/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  //\n  const [popoverOpened, setPopoverOpened] = useState(true);\n  const form = useForm({\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    }\n  });\n  const handleSubmit = form.onSubmit(values => {\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(values)\n    }).then(res => {\n      if (res.ok) {\n        res.json().then(data => {\n          console.log(data);\n        });\n      } else {\n        res.json().then(data => {\n          console.log(data.errors);\n        });\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        placeholder: \"Username\",\n        label: \"Username\" // required\n        ,\n        ...form.getInputProps(\"username\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        open: popoverOpened,\n        position: \"bottom\",\n        placement: \"start\",\n        withArrow: true,\n        style: {\n          popover: {\n            width: \"100%\"\n          }\n        },\n        trapFocus: false,\n        target: /*#__PURE__*/_jsxDEV(PasswordInput, {\n          placeholder: \"Password\",\n          label: \"Password\" // required\n          ,\n          ...form.getInputProps(\"password\"),\n          description: \"Strong password should include letters in lower and uppercase, at least 1 number, at least 1 special symbol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this),\n        children: \"Some Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        inverted: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          basic: true,\n          inverted: true,\n          color: \"violet\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"VhRsR989zfWjlOlUsMxRnTrIjX4=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Button","Segment","useForm","TextInput","PasswordInput","Popover","LoginForm","popoverOpened","setPopoverOpened","form","initialValues","username","password","handleSubmit","onSubmit","values","fetch","method","headers","body","JSON","stringify","then","res","ok","json","data","console","log","errors","getInputProps","popover","width"],"sources":["/Users/forgi/Development/code/phase-5/lux_nyc_final_project/lux_nyc_react_frontend/src/Components/LoginForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Segment } from \"semantic-ui-react\";\nimport { useForm } from \"@mantine/hooks\";\nimport { TextInput, PasswordInput, Popover } from \"@mantine/core\";\n\nconst LoginForm = () => {\n  //\n  const [popoverOpened, setPopoverOpened] = useState(true);\n  const form = useForm({\n    initialValues: {\n      username: \"\",\n      password: \"\",\n    },\n  });\n\n  const handleSubmit = form.onSubmit((values) => {\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(values),\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((data) => {\n          console.log(data);\n        });\n      } else {\n        res.json().then((data) => {\n          console.log(data.errors);\n        });\n      }\n    });\n  });\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <TextInput\n          placeholder=\"Username\"\n          label=\"Username\"\n          // required\n          {...form.getInputProps(\"username\")}\n        />\n        <Popover\n          open={popoverOpened}\n          position=\"bottom\"\n          placement=\"start\"\n          withArrow\n          style={{ popover: { width: \"100%\" } }}\n          trapFocus={false}\n          target={\n            <PasswordInput\n              placeholder=\"Password\"\n              label=\"Password\"\n              // required\n              {...form.getInputProps(\"password\")}\n              description=\"Strong password should include letters in lower and uppercase, at least 1 number, at least 1 special symbol\"\n            />\n          }\n        >\n          Some Content\n        </Popover>\n        <br></br>\n        {/* <PhoneInput placeholder=\"Enter phone number\" required /> */}\n        <Segment inverted>\n          <Button type=\"submit\" basic inverted color=\"violet\">\n            Submit\n          </Button>\n        </Segment>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,mBAAhC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,OAAnC,QAAkD,eAAlD;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB;EACA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,IAAD,CAAlD;EACA,MAAMU,IAAI,GAAGP,OAAO,CAAC;IACnBQ,aAAa,EAAE;MACbC,QAAQ,EAAE,EADG;MAEbC,QAAQ,EAAE;IAFG;EADI,CAAD,CAApB;EAOA,MAAMC,YAAY,GAAGJ,IAAI,CAACK,QAAL,CAAeC,MAAD,IAAY;IAC7CC,KAAK,CAAC,6BAAD,EAAgC;MACnCC,MAAM,EAAE,MAD2B;MAEnCC,OAAO,EAAE;QAAE,gBAAgB;MAAlB,CAF0B;MAGnCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,MAAf;IAH6B,CAAhC,CAAL,CAIGO,IAJH,CAISC,GAAD,IAAS;MACf,IAAIA,GAAG,CAACC,EAAR,EAAY;QACVD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAiBI,IAAD,IAAU;UACxBC,OAAO,CAACC,GAAR,CAAYF,IAAZ;QACD,CAFD;MAGD,CAJD,MAIO;QACLH,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAiBI,IAAD,IAAU;UACxBC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,MAAjB;QACD,CAFD;MAGD;IACF,CAdD;EAeD,CAhBoB,CAArB;EAkBA,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAEhB,YAAhB;MAAA,wBACE,QAAC,SAAD;QACE,WAAW,EAAC,UADd;QAEE,KAAK,EAAC,UAFR,CAGE;QAHF;QAAA,GAIMJ,IAAI,CAACqB,aAAL,CAAmB,UAAnB;MAJN;QAAA;QAAA;QAAA;MAAA,QADF,eAOE,QAAC,OAAD;QACE,IAAI,EAAEvB,aADR;QAEE,QAAQ,EAAC,QAFX;QAGE,SAAS,EAAC,OAHZ;QAIE,SAAS,MAJX;QAKE,KAAK,EAAE;UAAEwB,OAAO,EAAE;YAAEC,KAAK,EAAE;UAAT;QAAX,CALT;QAME,SAAS,EAAE,KANb;QAOE,MAAM,eACJ,QAAC,aAAD;UACE,WAAW,EAAC,UADd;UAEE,KAAK,EAAC,UAFR,CAGE;UAHF;UAAA,GAIMvB,IAAI,CAACqB,aAAL,CAAmB,UAAnB,CAJN;UAKE,WAAW,EAAC;QALd;UAAA;UAAA;UAAA;QAAA,QARJ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF,eA0BE;QAAA;QAAA;QAAA;MAAA,QA1BF,eA4BE,QAAC,OAAD;QAAS,QAAQ,MAAjB;QAAA,uBACE,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAsB,KAAK,MAA3B;UAA4B,QAAQ,MAApC;UAAqC,KAAK,EAAC,QAA3C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QA5BF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAsCD,CAlED;;GAAMxB,S;UAGSJ,O;;;KAHTI,S;AAoEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}