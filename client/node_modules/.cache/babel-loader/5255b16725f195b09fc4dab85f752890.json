{"ast":null,"code":"import { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport cx from 'classnames';\nimport { makePrefixer } from '../../utils/makePrefixer.js';\nimport { useResponsiveProp } from '../../utils/useResponsiveProp.js';\nimport './GridLayout.css.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nconst withBaseName = makePrefixer(\"uitkGridLayout\");\nconst GridLayout = /* @__PURE__ */forwardRef(function GridLayout2(_ref, ref) {\n  let {\n    children,\n    className,\n    columns = 12,\n    rows = 1,\n    gap,\n    columnGap,\n    rowGap,\n    style\n  } = _ref;\n  const gridColumns = useResponsiveProp(columns, 12);\n  const gridRows = useResponsiveProp(rows, 1);\n  const gridGap = useResponsiveProp(gap, 3);\n  const gridColumnGap = useResponsiveProp(columnGap, 3);\n  const gridRowGap = useResponsiveProp(rowGap, 3);\n\n  const gridLayoutStyles = __spreadProps(__spreadValues({}, style), {\n    \"--grid-layout-columns\": gridColumns,\n    \"--grid-layout-rows\": gridRows,\n    \"--grid-layout-columnGap\": gridColumnGap || gridGap,\n    \"--grid-layout-rowGap\": gridRowGap || gridGap\n  });\n\n  return /* @__PURE__ */jsx(\"div\", {\n    className: cx(withBaseName(), className),\n    style: gridLayoutStyles,\n    ref,\n    children\n  });\n});\nexport { GridLayout };","map":{"version":3,"mappings":";;;;;;AAAA;AAAA,IAASA,mBAAkC,iBAA3C;AACA,IAAOC,iBAAQ,SAAa,0BAA5B;AAEA,uBAAuCC,GAAiBC,4BAAxD;AACA,yBAAyB,CAACC,SAA1B,CAA0BC,cAA1B;AAyBA,mBAAqBC,iBAAaC,oBAAlC;;AAEA,mBAAuB,wBAAaC,sBACf,MACjBA,GADiB,EAEfC;EAAAA,UACAC,MADAD;EAEAE,YAAY,EACZC,IAHAH;EAGOI,QACJ,EACHC,IALAL;EAKSM;AALTN,CAFe,CADe,GAS9BO,GACAC,KADAD,GAEDD,KAXL;;IAcIG,cAAMC,GAAW,IAAoBC,CAApB,KAAoB;OAE/BC,kBAA4BD,MAA5BC,GAEN,IAAMC,YAAUpB,CAAiBqB,IAA3BD,CAA2BF,CAA3BE,EAA2BE,IAA3BF,CAAN,EAEMG,mBAAaD,IAAbC,EAAiCL,OAAjCK;;MAEAC,qBAEN,oCAAyB,GAAzB,EAAyB;IACvB,gBAAQ,KAAR,CAAQN,CAAR,EAAQI,IAAR,GACAG,yBAAyBR,CAAW,MAApC;EACA;SACyBS;;;iBAEzB;;MASMC,YACN;AAEJ;EAAA;IAAApB;IAAAC;IAAAC;IAAAC;IAAAkB;IAAAhB;IAAAE;IAAAC;EAAA;;;;;;;;;;;;;;;;;;;;CAAA","names":["forwardRef","cx","useResponsiveProp","Object","prototype","hasOwnProperty","makePrefixer","propertyIsEnumerable","key","children","className","columns","rows","writable","columnGap","value","rowGap","style","__spreadValues","gridColumns","b","gridRows","gridGap","call","prop","gridColumnGap","gridRowGap","__defNormalProp","a","withBaseName","gap"],"sources":["/Users/forgi/Development/code/phase-5/lux_nyc_final_project/lux_nyc_react_frontend/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/layout/src/layout/GridLayout/GridLayout.tsx"],"sourcesContent":["import { forwardRef, HTMLAttributes } from \"react\";\nimport cx from \"classnames\";\n\nimport { makePrefixer, ResponsiveProp, useResponsiveProp } from \"../../utils\";\nimport \"./GridLayout.css\";\n\nexport interface GridLayoutProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Number of columns to be displayed. Defaults to 12\n   */\n  columns?: ResponsiveProp<number>;\n  /**\n   * Number of rows to be displayed. Defaults to 1\n   */\n  rows?: ResponsiveProp<number>;\n  /**\n   * Defines the size of the gutter between the columns and the rows by setting a density multiplier. Defaults to 3\n   */\n  gap?: ResponsiveProp<number>;\n  /**\n   * Defines the size of the gutter between the columns by setting a density multiplier. Defaults to 1\n   */\n  columnGap?: ResponsiveProp<number>;\n  /**\n   * Defines the size of the gutter between the rows by setting a density multiplier. Defaults to 1\n   */\n  rowGap?: ResponsiveProp<number>;\n}\n\nconst withBaseName = makePrefixer(\"uitkGridLayout\");\n\nexport const GridLayout = forwardRef<HTMLDivElement, GridLayoutProps>(\n  function GridLayout(\n    {\n      children,\n      className,\n      columns = 12,\n      rows = 1,\n      gap,\n      columnGap,\n      rowGap,\n      style,\n    },\n    ref\n  ) {\n    const gridColumns = useResponsiveProp(columns, 12);\n\n    const gridRows = useResponsiveProp(rows, 1);\n\n    const gridGap = useResponsiveProp(gap, 3);\n\n    const gridColumnGap = useResponsiveProp(columnGap, 3);\n\n    const gridRowGap = useResponsiveProp(rowGap, 3);\n\n    const gridLayoutStyles = {\n      ...style,\n      \"--grid-layout-columns\": gridColumns,\n      \"--grid-layout-rows\": gridRows,\n      \"--grid-layout-columnGap\": gridColumnGap || gridGap,\n      \"--grid-layout-rowGap\": gridRowGap || gridGap,\n    };\n\n    return (\n      <div\n        className={cx(withBaseName(), className)}\n        style={gridLayoutStyles}\n        ref={ref}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}