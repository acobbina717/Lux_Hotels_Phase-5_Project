{"ast":null,"code":"import { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { FlexLayout } from '../FlexLayout/FlexLayout.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst StackLayout = /* @__PURE__ */forwardRef(function StackLayout2(_a, ref) {\n  var _b = _a,\n      {\n    children\n  } = _b,\n      rest = __objRest(_b, [\"children\"]);\n\n  return /* @__PURE__ */jsx(FlexLayout, __spreadProps(__spreadValues({\n    direction: \"column\",\n    wrap: false,\n    ref\n  }, rest), {\n    children\n  }));\n});\nexport { StackLayout };","map":{"version":3,"mappings":";;;AAAA;AAAA,IAASA,mBAAkC,iBAA3C;AACA,IAASC,iBAAkB,mCAA3B;AAkBA,uBAAwB,+BAAxB;AAEI,yBACE,UADF,CACaC,cADb;AACcC,mBAAUC,MAAQ,UAAR,CAAQC,oBAAlBF;;AAAmBG,mBAAW;EAAAC;EAAAC;EAAAC;EAAAC;AAAA,qBAAXJ;;AAAaK,kBAAQ;EAAG,SAAGC,IAAH,IAAOC,aAAP,kBAC5C,gBACEC,eACb,kBADa;;EAGlB,IAACC,mBAAD;;;;CALiDJ","names":["forwardRef","FlexLayout","hasOwnProperty","direction","Object","propertyIsEnumerable","wrap","enumerable","configurable","writable","value","ref","rest","b","__defNormalProp","__getOwnPropSymbols"],"sources":["/Users/forgi/Development/code/phase-5/lux_nyc_final_project/lux_nyc_react_frontend/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/layout/src/layout/StackLayout/StackLayout.tsx"],"sourcesContent":["import { forwardRef, HTMLAttributes } from \"react\";\nimport { FlexLayout } from \"../FlexLayout\";\nimport { FlexLayoutProps } from \"../types\";\n\nexport interface StackLayoutProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Defines the default behavior for how flex items are laid out along the cross axis on the current line.\n   */\n  align?: FlexLayoutProps[\"align\"];\n  /**\n   * Controls the space between items.\n   */\n  gap?: FlexLayoutProps[\"gap\"];\n  /**\n   * Adds a separator between elements.\n   */\n  separators?: FlexLayoutProps[\"separators\"];\n}\n\nexport const StackLayout = forwardRef<HTMLDivElement, StackLayoutProps>(\n  function StackLayout({ children, ...rest }, ref) {\n    return (\n      <FlexLayout direction=\"column\" wrap={false} ref={ref} {...rest}>\n        {children}\n      </FlexLayout>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}