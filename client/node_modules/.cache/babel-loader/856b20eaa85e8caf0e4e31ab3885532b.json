{"ast":null,"code":"import { jsx } from 'react/jsx-runtime';\nimport { ErrorIcon, SuccessTickIcon, WarningIcon, InfoIcon } from '@jpmorganchase/uitk-icons';\nimport cx from 'classnames';\nimport { forwardRef } from 'react';\nimport { makePrefixer } from '../utils/makePrefixer.js';\nimport '../aria-announcer/AriaAnnouncerContext.js';\nimport 'warning';\nimport '../theme/Theme.js';\nimport './StateIcon.css.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst icons = {\n  error: ErrorIcon,\n  success: SuccessTickIcon,\n  warning: WarningIcon,\n  info: InfoIcon\n};\nconst withBaseName = makePrefixer(\"uitkStateIcon\");\nconst StateIcon = /* @__PURE__ */forwardRef((props, ref) => {\n  const _a = props,\n        {\n    className,\n    state\n  } = _a,\n        restProps = __objRest(_a, [\"className\", \"state\"]);\n\n  const IconComponent = icons[state];\n  return /* @__PURE__ */jsx(IconComponent, __spreadProps(__spreadValues({\n    className: cx(withBaseName(), withBaseName(state), className),\n    size: 24\n  }, restProps), {\n    ref\n  }));\n});\nexport { StateIcon };","map":{"version":3,"mappings":";;;;;;;;;AAAA;AAAA,IACEA,mBAEQ,iBAHV;AAOA,IAAOC,iBAAgB,mCAAvB;AACA,IAASC,mBAAkB,+BAA3B;AACA,IAASC,qBAAoB,UAApBA,CAAoBC,cAA7B;AAGA,yBAAyB,UAAzB,CAAyBC,oBAAzB;;AAEA,mBAAc;EAAAC;EAAAC;EAAAC;EAAAC;AAAA,qBAAd;;AACEC,kBAAgB;EAChBC,SAAOC,IAAPD,IAAwBE,aAAxBF,EACAG,gBAAoB,KAApBA,CAAoBD,CAApBC,EAAoBF,IAApBE,GACAC,eAAc,kBAAdA;;EACA,yBAMF,iBAAqBZ,mBAAa,GAAlC,EAAkC;IAE3B,gBAAe,CAAGD,IAAlB,CAAkBA,CAAlB,EAAkBA,IAAlB,GAEHc,eAAiB,CAAEC,CAAF,EAAOL,IAAP,EAASC,EAAGK,IAAH,CAAT,CAAjB;EACA;EAEA;AAEIC,CAnBNT;;AAoBMU,iBAAQ,gDAARA;;AACC,aAAY;EACbC,aAAQ,EAARA;;OAEF,oBAEJ;;;;;;CALO","names":["ErrorIcon","classnames","forwardRef","makePrefixer","hasOwnProperty","propertyIsEnumerable","enumerable","configurable","writable","value","error","success","prop","b","warning","info","__defNormalProp","state","restProps","className","size","ref"],"sources":["/Users/forgi/Development/code/phase-5/lux_nyc_final_project/lux_nyc_react_frontend/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/src/state-icon/StateIcon.tsx"],"sourcesContent":["import {\n  ErrorIcon,\n  IconProps,\n  InfoIcon,\n  SuccessTickIcon,\n  WarningIcon,\n} from \"@jpmorganchase/uitk-icons\";\nimport classnames from \"classnames\";\nimport { forwardRef } from \"react\";\nimport { makePrefixer } from \"../utils\";\nimport { ValidationState } from \"./ValidationState\";\n\nimport \"./StateIcon.css\";\n\nconst icons = {\n  error: ErrorIcon,\n  success: SuccessTickIcon,\n  warning: WarningIcon,\n  info: InfoIcon,\n};\n\nexport interface StateIconProps extends IconProps {\n  state: ValidationState;\n}\n\nconst withBaseName = makePrefixer(\"uitkStateIcon\");\n\nexport const StateIcon = forwardRef<HTMLSpanElement, StateIconProps>(\n  (props, ref) => {\n    const { className, state, ...restProps } = props;\n    const IconComponent = icons[state];\n\n    return (\n      <IconComponent\n        className={classnames(withBaseName(), withBaseName(state), className)}\n        size={24}\n        {...restProps}\n        ref={ref}\n      />\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}