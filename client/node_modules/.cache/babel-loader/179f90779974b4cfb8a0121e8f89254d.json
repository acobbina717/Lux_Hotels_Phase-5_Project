{"ast":null,"code":"import { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport cx from 'classnames';\nimport { makePrefixer } from '../../utils/makePrefixer.js';\nimport { useResponsiveProp } from '../../utils/useResponsiveProp.js';\nimport './GridItem.css.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst GRID_ALIGNMENT_BASE = [\"start\", \"end\", \"center\", \"stretch\"];\nconst withBaseName = makePrefixer(\"uitkGridItem\");\nconst colStart = \"auto\";\nconst colEnd = \"auto\";\nconst rowStart = \"auto\";\nconst rowEnd = \"auto\";\nconst GridItem = /* @__PURE__ */forwardRef(function GridItem2(_a, ref) {\n  var _b = _a,\n      {\n    children,\n    className,\n    colSpan,\n    rowSpan,\n    horizontalAlignment = \"stretch\",\n    verticalAlignment = \"stretch\",\n    style\n  } = _b,\n      rest = __objRest(_b, [\"children\", \"className\", \"colSpan\", \"rowSpan\", \"horizontalAlignment\", \"verticalAlignment\", \"style\"]);\n\n  const gridItemColSpan = useResponsiveProp(colSpan, \"auto\");\n  const gridItemRowSpan = useResponsiveProp(rowSpan, \"auto\");\n  const gridColumnStart = gridItemColSpan ? `span ${gridItemColSpan}` : colStart;\n  const gridColumnEnd = gridItemColSpan ? `span ${gridItemColSpan}` : colEnd;\n  const gridRowStart = gridItemRowSpan ? `span ${gridItemRowSpan}` : rowStart;\n  const gridRowEnd = gridItemRowSpan ? `span ${gridItemRowSpan}` : rowEnd;\n\n  const gridStyles = __spreadProps(__spreadValues({}, style), {\n    \"--grid-item-justify-self\": horizontalAlignment,\n    \"--grid-item-align-self\": verticalAlignment,\n    \"--grid-item-row-start\": gridRowStart,\n    \"--grid-item-column-start\": gridColumnStart,\n    \"--grid-item-row-end\": gridRowEnd,\n    \"--grid-item-column-end\": gridColumnEnd\n  });\n\n  return /* @__PURE__ */jsx(\"div\", __spreadProps(__spreadValues({\n    className: cx(withBaseName(), className),\n    style: gridStyles,\n    ref\n  }, rest), {\n    children\n  }));\n});\nexport { GRID_ALIGNMENT_BASE, GridItem };","map":{"version":3,"mappings":";;;;;;AAAA;AAAA,IAASA,mBAAkC,iBAA3C;AACA,IAAOC,iBAAQ,SAAa,0BAA5B;AAEA,uBAAuCC,GAAiBC,4BAAxD;AACA,yBAAwB,UAAxB,CAAwBC,cAAxB;AAEA,IAAOC,gCAA4BC,oBAAnC;;IACEC,eAAO;EAAAC;EAAAC;EAAAC;EAAAC;AAAA;;IACPC,cAAK;OACG,2BACR,IAASC,0BAAT,EACSN;;EAwBX,IAAMO,mBAAN,EAEMC,iBAAWC,mBAAO,GAAlBD,EAAkB;IAClBE,gBAAgB,KAAhBA,CAAgBC,CAAhBD,EAAgBE,IAAhBF,GACAG,eAAiB,CAACC,CAAD,EAACF,IAAD,EAACD,OAAD,CAAjBE;EACAE;EAEN;;;IAgBIC,aAAMC,aAAmCC,+BAAgB,CAACP,CAAD,CAAhB;;AAEzC,aAAqB,wBAAkB;EAIvC,UAAmB,KAAnB;;EAEA,SAAkBC,IAAlB,IAAkBO,MAAlB,EAEA,gBAAgB,KAAhB,CAAkCA,MAAlC,EAAkCP,IAAlC,KAAsCQ,OAAOH,QAAP,CAAOA,IAAP,IAA2BF,CAAjE,EAEAM,eAAmBF,YAAnB;;EACE,UAAQ,QAAR,IAAQV,mBAAR,EACA,oCAA+C,QAA/C,EAA+C;IAC/C,4BAA0Ba,CAA1B,IAA2CxB,+BAA3C,EACAuB;EACA;EACA;AACA,CAjBF;;AAyBY,6CAMf,QANe","names":["forwardRef","cx","useResponsiveProp","Object","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","enumerable","configurable","writable","value","__spreadValues","__hasOwnProp","withBaseName","colStart","__getOwnPropSymbols","colEnd","b","prop","rowStart","a","rowEnd","__spreadProps","gridItemRowSpan","__defProps","source","exclude","target","verticalAlignment"],"sources":["/Users/forgi/Development/code/phase-5/lux_nyc_final_project/lux_nyc_react_frontend/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/layout/src/layout/GridItem/GridItem.tsx"],"sourcesContent":["import { forwardRef, HTMLAttributes } from \"react\";\nimport cx from \"classnames\";\n\nimport { makePrefixer, ResponsiveProp, useResponsiveProp } from \"../../utils\";\nimport \"./GridItem.css\";\n\nexport const GRID_ALIGNMENT_BASE = [\n  \"start\",\n  \"end\",\n  \"center\",\n  \"stretch\",\n] as const;\n\ntype GridAlignment = typeof GRID_ALIGNMENT_BASE[number];\n\ntype GridProperty = number | \"auto\";\nexport interface GridItemProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * The item will span across the provided number of grid columns. Defaults to \"auto\"\n   */\n  colSpan?: ResponsiveProp<GridProperty>;\n  /**\n   * The item will span across the provided number of grid rows. Defaults to \"auto\"\n   */\n  rowSpan?: ResponsiveProp<GridProperty>;\n  /**\n   * Aligns a grid item inside a cell along the inline (row) axis. Defaults to \"stretch\"\n   */\n  horizontalAlignment?: GridAlignment;\n  /**\n   * Aligns a grid item inside a cell along the block (column) axis. Defaults to \"stretch\"\n   */\n  verticalAlignment?: GridAlignment;\n}\n\nconst withBaseName = makePrefixer(\"uitkGridItem\");\n\nconst colStart = \"auto\";\nconst colEnd = \"auto\";\nconst rowStart = \"auto\";\nconst rowEnd = \"auto\";\n\nexport const GridItem = forwardRef<HTMLDivElement, GridItemProps>(\n  function GridItem(\n    {\n      children,\n      className,\n      colSpan,\n      rowSpan,\n      horizontalAlignment = \"stretch\",\n      verticalAlignment = \"stretch\",\n      style,\n      ...rest\n    },\n    ref\n  ) {\n    const gridItemColSpan = useResponsiveProp(colSpan, \"auto\");\n\n    const gridItemRowSpan = useResponsiveProp(rowSpan, \"auto\");\n\n    const gridColumnStart = gridItemColSpan\n      ? `span ${gridItemColSpan}`\n      : colStart;\n\n    const gridColumnEnd = gridItemColSpan ? `span ${gridItemColSpan}` : colEnd;\n\n    const gridRowStart = gridItemRowSpan ? `span ${gridItemRowSpan}` : rowStart;\n\n    const gridRowEnd = gridItemRowSpan ? `span ${gridItemRowSpan}` : rowEnd;\n\n    const gridStyles = {\n      ...style,\n      \"--grid-item-justify-self\": horizontalAlignment,\n      \"--grid-item-align-self\": verticalAlignment,\n      \"--grid-item-row-start\": gridRowStart,\n      \"--grid-item-column-start\": gridColumnStart,\n      \"--grid-item-row-end\": gridRowEnd,\n      \"--grid-item-column-end\": gridColumnEnd,\n    };\n\n    return (\n      <div\n        className={cx(withBaseName(), className)}\n        style={gridStyles}\n        ref={ref}\n        {...rest}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}