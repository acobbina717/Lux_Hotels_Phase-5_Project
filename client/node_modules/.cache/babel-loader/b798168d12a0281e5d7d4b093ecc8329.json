{"ast":null,"code":"import { jsx } from 'react/jsx-runtime';\nimport cx from 'classnames';\nimport { forwardRef, useState, useCallback } from 'react';\nimport { pillBaseName } from './constants.js';\nimport { DeleteButton } from './internal/DeleteButton.js';\nimport { PillBase } from './internal/PillBase.js';\nimport { makePrefixer } from '../utils/makePrefixer.js';\nimport '../aria-announcer/AriaAnnouncerContext.js';\nimport 'warning';\nimport '../theme/Theme.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst deleteKeys = [\"Enter\", \"Delete\", \"Backspace\"];\n\nconst noop = () => void 0;\n\nconst withBaseName = makePrefixer(pillBaseName);\nconst ClosablePill = /* @__PURE__ */forwardRef(function ClosablePill2(_a, ref) {\n  var _b = _a,\n      {\n    onDelete,\n    label,\n    disabled,\n    onClick = noop,\n    className,\n    deleteIcon\n  } = _b,\n      rest = __objRest(_b, [\"onDelete\", \"label\", \"disabled\", \"onClick\", \"className\", \"deleteIcon\"]);\n\n  const [active, setActive] = useState(false);\n  const handleKeyDown = useCallback(event => {\n    if (deleteKeys.includes(event.key)) {\n      setActive(true);\n    }\n  }, []);\n\n  const handleKeyUp = event => {\n    setActive(false);\n\n    if (!disabled && deleteKeys.includes(event.key)) {\n      onDelete == null ? void 0 : onDelete(event);\n    }\n  };\n\n  return /* @__PURE__ */jsx(PillBase, __spreadProps(__spreadValues({\n    \"aria-roledescription\": \"Closable Pill\",\n    className: cx({\n      [withBaseName(\"active\")]: active\n    }, className),\n    deletable: true,\n    deleteIcon: deleteIcon || /* @__PURE__ */jsx(DeleteButton, {\n      active,\n      disabled\n    }),\n    disabled,\n    label,\n    onDelete,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp\n  }, rest), {\n    ref\n  }));\n});\nexport { ClosablePill };","map":{"version":3,"mappings":";;;;;;;;;;AAAA;AAAA,IAAOA,UAAQ,0BAAf;AACA,qBAIEC,mCAJF;AAOA,IAASC,mBAAoB,+BAA7B;AACA,IAASC,qBAAoB,UAApBA,CAAoBC,cAA7B;AACA,IAASC,eAA+BC,qCAAxC;;AACA,IAASC,kBAAoB,qBAAWC;EAAAC;EAAAC;EAAAC;EAAAC;AAAA,qBAAxC;;AAEA,kBAAmB;OAAQ,2BAAE,IAAQC,0BAAR,EAAqBC;;EAAE,yBAC9CC,SAAOC,IAAPD,IAAsBE,sBAAtBF,EAAsB;IAAC,gCAS7BD,eAAqBP,UAAYW,CAAChB,MAAbK,CAArB;EAEA;SAYQY;AAEN,CA1BF;;iBA2BQC,OAAmBF,CAAnBE,KAAmBC,UAAOb,CAAGW,CAAHX,EAAMc,oBAANd;;aACnB,YAAKe,OAAL,KAAO;EACjB;;OACA,IAAIP,gBAEP,gBAAiB,KAAjB,CAAqBQ,MAArB,EAA8DR,IAA9D,KAA8DO,yBAA9D,QACW,SAAME,MAAE;;YACb,IAAS,sCACHT,2BAAU;IACnB,kEACDU;EAEF;EAEIC;;;AAWAC,gBAAQ,GAAU,CAClBC,OADkB,EAElBC,QAFkB,EAGlBC,WAHkB,CAAlBH;;AAKC,aAAO,YAAP;;AACDI,kBAAQ,6BAARA;AAEF;EACF,IAACC,OAAD;EAAA,IAAC;IAAAH;IAAAD;IAAAD;IAAAM;IAAAC;IAAAC;EAAA,MAAD;EAAA,IAACC,6FAAD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CADE","names":["cn","useCallback","pillBaseName","DeleteButton","hasOwnProperty","PillBase","Object","makePrefixer","key","enumerable","configurable","writable","value","__hasOwnProp","__defNormalProp","noop","prop","__getOwnPropSymbols","b","a","deleteKeys","__defProps","__getOwnPropDescs","exclude","event","source","target","aria-roledescription","disabled","label","onDelete","onKeyDown","ref","_b","onClick","className","deleteIcon","rest"],"sources":["/Users/forgi/Development/code/phase-5/lux_nyc_final_project/lux_nyc_react_frontend/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/src/pill/ClosablePill.tsx"],"sourcesContent":["import cn from \"classnames\";\nimport {\n  ForwardedRef,\n  forwardRef,\n  KeyboardEvent,\n  useCallback,\n  useState,\n} from \"react\";\nimport { pillBaseName } from \"./constants\";\nimport { DeleteButton } from \"./internal/DeleteButton\";\nimport { PillBase, PillBaseProps } from \"./internal/PillBase\";\nimport { makePrefixer } from \"../utils\";\n\nconst deleteKeys = [\"Enter\", \"Delete\", \"Backspace\"];\nconst noop = () => undefined;\n\nexport interface ClosablePillProps extends Omit<PillBaseProps, \"clickable\"> {\n  /**\n   * Clickable Pill is not supported by Closable variant.\n   */\n  clickable?: false;\n}\n\nconst withBaseName = makePrefixer(pillBaseName);\n\nexport const ClosablePill = forwardRef(function ClosablePill(\n  {\n    onDelete,\n    label,\n    disabled,\n    onClick = noop,\n    className,\n    deleteIcon,\n    ...rest\n  }: PillBaseProps,\n  ref: ForwardedRef<HTMLDivElement>\n) {\n  const [active, setActive] = useState(false);\n\n  const handleKeyDown = useCallback((event: KeyboardEvent<HTMLDivElement>) => {\n    if (deleteKeys.includes(event.key)) {\n      setActive(true);\n    }\n  }, []);\n\n  const handleKeyUp = (event: KeyboardEvent<HTMLDivElement>) => {\n    setActive(false);\n    if (!disabled && deleteKeys.includes(event.key)) {\n      onDelete?.(event);\n    }\n  };\n\n  return (\n    <PillBase\n      aria-roledescription=\"Closable Pill\"\n      className={cn(\n        {\n          [withBaseName(\"active\")]: active,\n        },\n        className\n      )}\n      deletable\n      deleteIcon={\n        deleteIcon || <DeleteButton active={active} disabled={disabled} />\n      }\n      disabled={disabled}\n      label={label}\n      onDelete={onDelete}\n      onKeyDown={handleKeyDown}\n      onKeyUp={handleKeyUp}\n      {...rest}\n      ref={ref}\n    />\n  );\n});\n"]},"metadata":{},"sourceType":"module"}