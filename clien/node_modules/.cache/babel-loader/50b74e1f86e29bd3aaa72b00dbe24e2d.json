{"ast":null,"code":"import { jsx } from 'react/jsx-runtime';\nimport cx from 'classnames';\nimport { forwardRef } from 'react';\nimport { makePrefixer } from '../utils/makePrefixer.js';\nimport '../aria-announcer/AriaAnnouncerContext.js';\nimport 'warning';\nimport '../theme/Theme.js';\nimport './Panel.css.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst withBaseName = makePrefixer(\"uitkPanel\");\nconst Panel = /* @__PURE__ */forwardRef(function Panel2(_a, ref) {\n  var _b = _a,\n      {\n    className,\n    children\n  } = _b,\n      restProps = __objRest(_b, [\"className\", \"children\"]);\n\n  return /* @__PURE__ */jsx(\"div\", __spreadProps(__spreadValues({\n    className: cx(withBaseName(), className),\n    ref\n  }, restProps), {\n    children\n  }));\n});\nexport { Panel };","map":{"version":3,"mappings":";;;;;;;;AAAA;AAAA,IAAOA,UAAQ,0BAAf;AACA,IAASC,iBAAkC,mCAA3C;AACA,IAASC,mBAAoB,+BAA7B;AAEA,yBAAqB,UAArB,CAAqBC,cAArB;AAEA;;;;;;;;;;;;;;EAUG;EAII;AAEH;;AACOC,iBAAS,GAAI,IAACC,CAAD,KAACA,+BAA0B,GAA1BA,CAAdD;;AAA0CE,aAAKA,GAAG;EAAG,UAAY,KAAZ;;mBAC/CC,YAEXC,8DAEJC;;;;;;CALmDH","names":["cx","forwardRef","makePrefixer","hasOwnProperty","className","withBaseName","ref","source","__hasOwnProp","target"],"sources":["/Users/forgi/Development/code/phase-5/lux_nyc_final_project/lux_nyc_react_frontend/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/src/panel/Panel.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport { forwardRef, HTMLAttributes } from \"react\";\nimport { makePrefixer } from \"../utils\";\n\nimport \"./Panel.css\";\n\n/**\n * Panel component that acts as wrapper around a node\n *\n * @example\n * const PanelExample = () => (\n *   <Panel>\n *     <p>This is a panel around some text.</p>\n *   </Panel>\n * );\n *\n */\n\nconst withBaseName = makePrefixer(\"uitkPanel\");\n\nexport const Panel = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\n  function Panel({ className, children, ...restProps }, ref) {\n    return (\n      <div className={cx(withBaseName(), className)} ref={ref} {...restProps}>\n        {children}\n      </div>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}