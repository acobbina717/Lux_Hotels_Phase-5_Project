{"ast":null,"code":"import { jsx } from 'react/jsx-runtime';\nimport { forwardRef, Children } from 'react';\nimport cx from 'classnames';\nimport { makePrefixer } from '../../utils/makePrefixer.js';\nimport { useResponsiveProp } from '../../utils/useResponsiveProp.js';\nimport './FlexLayout.css.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst withBaseName = makePrefixer(\"uitkFlexLayout\");\nconst FLEX_ALIGNMENT_BASE = [\"start\", \"end\", \"center\"];\nconst FLEX_CONTENT_ALIGNMENT_BASE = [...FLEX_ALIGNMENT_BASE, \"space-between\", \"space-around\", \"space-evenly\"];\nconst FlexLayout = /* @__PURE__ */forwardRef(function FlexLayout2(_a, ref) {\n  var _b = _a,\n      {\n    align,\n    children,\n    className,\n    direction,\n    gap,\n    justify,\n    separators,\n    style: style1,\n    wrap\n  } = _b,\n      rest = __objRest(_b, [\"align\", \"children\", \"className\", \"direction\", \"gap\", \"justify\", \"separators\", \"style\", \"wrap\"]);\n\n  const separatorAlignment = separators === true ? \"center\" : separators;\n\n  const addPrefix = style => {\n    return style === \"start\" || style === \"end\" ? `flex-${style}` : style;\n  };\n\n  const flexGap = useResponsiveProp(gap, 3);\n  const flexDirection = useResponsiveProp(direction, \"row\");\n  const flexWrap = useResponsiveProp(wrap, false);\n\n  const flexLayoutStyles = __spreadProps(__spreadValues({}, style1), {\n    \"--flex-layout-align\": align && addPrefix(align),\n    \"--flex-layout-direction\": flexDirection,\n    \"--flex-layout-gap-multiplier\": flexGap,\n    \"--flex-layout-justify\": justify && addPrefix(justify),\n    \"--flex-layout-wrap\": flexWrap ? \"wrap\" : \"nowrap\"\n  });\n\n  return /* @__PURE__ */jsx(\"div\", __spreadProps(__spreadValues({\n    className: cx(className, withBaseName(), {\n      [withBaseName(\"separator\")]: separatorAlignment,\n      [withBaseName(`separator-${flexDirection || \"row\"}-${separatorAlignment}`)]: separatorAlignment,\n      [withBaseName(`separator-${flexDirection || \"row\"}`)]: separatorAlignment\n    }),\n    ref,\n    style: flexLayoutStyles\n  }, rest), {\n    children: separators ? Children.map(children, child => /* @__PURE__ */jsx(\"div\", {\n      className: withBaseName(\"separator-wrapper\"),\n      children: child\n    })) : children\n  }));\n});\nexport { FLEX_ALIGNMENT_BASE, FLEX_CONTENT_ALIGNMENT_BASE, FlexLayout };","map":{"version":3,"mappings":";;;;;;AAAA;AAAA,cAAiB,SAAY,iBAA7B;AACA,IAAOA,iBAAQ,SAAa,0BAA5B;AAEA,uBAAuCC,GAAiBC,4BAAxD;AAEA,yBAAyB,CAACC,SAA1B,CAA0BC,cAA1B;AAGA,mBAAqBC,iBAAaC,oBAAlC;;AAEA,IAAOC,6BAA4BC,KAA5B,KAA4BC;EAAAC;EAAAC;EAAAC;EAAAJ;AAAA,qBAAnC;;IAAoCK,cAAO;OAAO,2BAAE,IAAQC,0BAAR,EAAmBP;;EAChE,8BACiB;IACP,gCACDA;EACA;EACL;AAgCX;;IAgBIQ,aAAMC,uBAA+B,qBAAoB,CAAGC,CAAH,CAApB;;AACrC,aAAe,YAAIC,OAAJ,KAAsB;EACnC,aAAOA,EAAP;;OACA,oBAEF,IAAMC,YAAUlB,CAAiBmB,IAA3BD,CAA2BE,MAA3BF,EAA2BG,IAA3BH,KAAiCI,OAAG,QAAH,CAAGD,IAAH,IAAG,CAA1C,EACME,qBAAiC,MAAjCA;;MACAC,kBAA4BC,qBAClC,oCAAyB,QAAzB,EAAyB;IACvB,WAAQ,QAAR,CAAQJ,IAAR,IAAQ,CAAR,IAAQK,+BAAR,EACAC,qBAAqB,MAArB;EACA;EACA;AACA,CAZF;;AAoBM,iCACa,kBADb;AAGA,MAACC,mBAAc,aAGjBC,KAHiB,EAIjBZ,QAJiB,CAAf;iCAQWa,GAAG,CACLC,sBADK,mBACsD,cADtD,EAEX,cAFW;AAOtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAA","names":["cx","useResponsiveProp","Object","prototype","hasOwnProperty","makePrefixer","propertyIsEnumerable","__defNormalProp","value","key","enumerable","configurable","writable","__spreadValues","__hasOwnProp","__spreadProps","separatorAlignment","separators","style","flexGap","call","source","prop","exclude","flexDirection","flexWrap","__getOwnPropSymbols","__propIsEnum","target","withBaseName","ref","map","className"],"sources":["/Users/forgi/Development/code/phase-5/lux_nyc_final_project/lux_nyc_react_frontend/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/layout/src/layout/FlexLayout/FlexLayout.tsx"],"sourcesContent":["import { Children, forwardRef, HTMLAttributes } from \"react\";\nimport cx from \"classnames\";\n\nimport { makePrefixer, ResponsiveProp, useResponsiveProp } from \"../../utils\";\n\nimport \"./FlexLayout.css\";\nimport { LayoutDirection, LayoutSeparator } from \"../types\";\n\nconst withBaseName = makePrefixer(\"uitkFlexLayout\");\n\nexport const FLEX_ALIGNMENT_BASE = [\"start\", \"end\", \"center\"] as const;\nexport const FLEX_CONTENT_ALIGNMENT_BASE = [\n  ...FLEX_ALIGNMENT_BASE,\n  \"space-between\",\n  \"space-around\",\n  \"space-evenly\",\n] as const;\n\nexport type FlexAlignment = typeof FLEX_ALIGNMENT_BASE[number];\nexport type FlexContentAlignment = typeof FLEX_CONTENT_ALIGNMENT_BASE[number];\n\nexport interface FlexLayoutProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Defines the default behavior for how flex items are laid out along the cross axis on the current line.\n   */\n  align?: FlexAlignment | \"stretch\" | \"baseline\";\n  /**\n   * Establishes the main-axis, defining the direction children are placed.\n   */\n  direction?: ResponsiveProp<LayoutDirection>;\n  /**\n   * Controls the space between items.\n   */\n  gap?: ResponsiveProp<number>;\n  /**\n   * Defines the alignment along the main axis.\n   */\n  justify?: FlexContentAlignment;\n  /**\n   * Adds a separator between elements.\n   */\n  separators?: LayoutSeparator | true;\n  /**\n   * Allow the items to wrap as needed, default is false.\n   */\n  wrap?: ResponsiveProp<boolean>;\n}\n\nexport const FlexLayout = forwardRef<HTMLDivElement, FlexLayoutProps>(\n  function FlexLayout(\n    {\n      align,\n      children,\n      className,\n      direction,\n      gap,\n      justify,\n      separators,\n      style,\n      wrap,\n      ...rest\n    },\n    ref\n  ) {\n    const separatorAlignment = separators === true ? \"center\" : separators;\n    const addPrefix = (style: string) => {\n      return style === \"start\" || style === \"end\" ? `flex-${style}` : style;\n    };\n\n    const flexGap = useResponsiveProp(gap, 3);\n    const flexDirection = useResponsiveProp(direction, \"row\");\n    const flexWrap = useResponsiveProp(wrap, false);\n    const flexLayoutStyles = {\n      ...style,\n      \"--flex-layout-align\": align && addPrefix(align),\n      \"--flex-layout-direction\": flexDirection,\n      \"--flex-layout-gap-multiplier\": flexGap,\n      \"--flex-layout-justify\": justify && addPrefix(justify),\n      \"--flex-layout-wrap\": flexWrap ? \"wrap\" : \"nowrap\",\n    };\n\n    return (\n      <div\n        className={cx(className, withBaseName(), {\n          [withBaseName(\"separator\")]: separatorAlignment,\n          [withBaseName(\n            `separator-${flexDirection || \"row\"}-${separatorAlignment}`\n          )]: separatorAlignment,\n          [withBaseName(`separator-${flexDirection || \"row\"}`)]:\n            separatorAlignment,\n        })}\n        ref={ref}\n        style={flexLayoutStyles}\n        {...rest}\n      >\n        {separators\n          ? Children.map(children, (child) => (\n              <div className={withBaseName(\"separator-wrapper\")}>{child}</div>\n            ))\n          : children}\n      </div>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}