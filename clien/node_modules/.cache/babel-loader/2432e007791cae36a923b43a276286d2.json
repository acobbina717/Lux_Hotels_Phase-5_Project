{"ast":null,"code":"import { createContext, useContext, useDebugValue } from 'react';\nimport { Tooltip } from './Tooltip.js';\nconst TooltipContext = createContext(void 0);\n\nconst useTooltipContext = () => {\n  const context = useContext(TooltipContext) || {};\n  useDebugValue(`${context && context.Tooltip !== void 0 ? \"Customized\" : \"Default UIToolkit\"} Tooltip.`);\n  return {\n    Tooltip: Tooltip,\n    enterDelay: context.enterDelay || 1500,\n    leaveDelay: context.leaveDelay || 0,\n    placement: context.placement || \"top\"\n  };\n};\n\nexport { TooltipContext, useTooltipContext };","map":{"version":3,"mappings":";;MAcaA,cAAc,GAAGC,aAAa,CACzCC,MADyC;;AAI3C;;;;;IAMAC,UAAO,SAAuB,WAAvB,IAAgC;IACrCC,UAAMC,SAAyC,WAAzCA,IAAyC;IAE/CC,gCAEeD;;CAXjB","names":["TooltipContext","createContext","undefined","enterDelay","leaveDelay","context","useDebugValue"],"sources":["/Users/forgi/Development/code/phase-5/lux_nyc_final_project/lux_nyc_react_frontend/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/src/tooltip/TooltipContext.ts"],"sourcesContent":["import { createContext, ComponentType, useContext, useDebugValue } from \"react\";\nimport { Tooltip as UITKTooltip, TooltipProps } from \"./Tooltip\";\nimport { UseTooltipProps } from \"./useTooltip\";\n\n// TODO see also below. what is the intention od the context.toolTip - that users can supply\n// a component or an element\nexport interface TooltipContextProps {\n  // TODO: We should relax the constraint of prop so that custom Tooltip conforming to a simpler API will work\n  Tooltip?: ComponentType<TooltipProps>;\n  enterDelay?: number;\n  leaveDelay?: number;\n  placement?: UseTooltipProps[\"placement\"];\n}\n\nexport const TooltipContext = createContext<TooltipContextProps | undefined>(\n  undefined\n);\n\n/**\n * TODO: Probably move this to Tooltip packages so it can be reused?\n *\n * Provide defaults for Tooltip config so that we can maintain the consistency\n * if no customized override is provided\n */\nexport const useTooltipContext = () => {\n  const context: TooltipContextProps = useContext(TooltipContext) || {};\n\n  useDebugValue(\n    `${\n      context && context.Tooltip !== undefined\n        ? \"Customized\"\n        : \"Default UIToolkit\"\n    } Tooltip.`\n  );\n\n  // TODO what is the intention od the context.toolTip - that users can supply\n  // a component or an element\n  return {\n    Tooltip: /* context.Tooltip ||*/ UITKTooltip,\n    enterDelay: context.enterDelay || 1500,\n    leaveDelay: context.leaveDelay || 0,\n    placement: context.placement || \"top\",\n  };\n};\n"]},"metadata":{},"sourceType":"module"}