{"ast":null,"code":"import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport cx from 'classnames';\nimport './ControlLabel.css.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst baseName = \"uitkControlLabel\";\nconst ControlLabel = /* @__PURE__ */forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    children,\n    className,\n    disabled,\n    label,\n    labelPlacement = \"left\"\n  } = _b,\n      other = __objRest(_b, [\"children\", \"className\", \"disabled\", \"label\", \"labelPlacement\"]);\n\n  return /* @__PURE__ */jsxs(\"label\", __spreadProps(__spreadValues({\n    className: cx(baseName, {\n      [`${baseName}-disabled`]: disabled\n    }, className),\n    ref\n  }, other), {\n    children: [labelPlacement === \"left\" && /* @__PURE__ */jsx(\"span\", {\n      className: `${baseName}-label`,\n      children: label\n    }), children, labelPlacement === \"right\" && /* @__PURE__ */jsx(\"span\", {\n      className: `${baseName}-labelRight`,\n      children: label\n    })]\n  }));\n});\nexport { ControlLabel, baseName };","map":{"version":3,"mappings":";;;;AACA;AADA,IAAyBA,oCAAzB;AACA,qBAA0B,mCAA1B;AACA,IAAOC,mBAAgB,+BAAvB;AAEA,oCAA4BC,cAA5B;AASA,gBAAaC,SAAW,UAAXA,CAAWC,oBAAxB;;AAEA,mBAAaC,SAAeC,GAAfD,EAAeC,KAAfD,KAAeC,aAEtBC,SAAQ,MAAWC,GAAX,EAAW;EAAEC,UAAQ,EAAEC,IAAZ;EAAiBC,YAAEC,MAAnB;EAAoCC,QAAWC,MAA/C;EAAsDC;AAAtD,CAAX,CAFcT,GAIrBU,gBAJP;;AAKI,yBACEC,CADF,KACGP;EACCQ,iBAAWjB,UAAU,EAAVA,CAAXiB,kBAGgB,MAACD,UACdE,eAEF,kBAFE;;EAGHC,yBACC,SAAQC,IAAR,IAAQC,sBAAR,EAAQ;oCAERV,mBAAmBS,IAAnBT,EAAmBK,OAAnBL;EACOM;;CAbZ;;iBAea;;AACRN,qCAAmB;EACZM;;2CACP;;MACKK,MACR,QADQ,IACRD,qBAEJ;;;;CANOV","names":["__defProps","classnames","hasOwnProperty","baseName","propertyIsEnumerable","ControlLabel","forwardRef","children","key","disabled","label","configurable","labelPlacement","writable","other","value","obj","b","className","__defNormalProp","ref","prop","__getOwnPropSymbols","source"],"sources":["/Users/forgi/Development/code/phase-5/lux_nyc_final_project/lux_nyc_react_frontend/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/src/control-label/ControlLabel.tsx"],"sourcesContent":["// TODO Label positioning\nimport React, { forwardRef, LabelHTMLAttributes, ReactNode } from \"react\";\nimport classnames from \"classnames\";\n\nimport \"./ControlLabel.css\";\n\nexport interface ControlLabelProps\n  extends LabelHTMLAttributes<HTMLLabelElement> {\n  disabled?: boolean;\n  label?: ReactNode;\n  labelPlacement?: \"left\" | \"right\";\n}\n\nexport const baseName = \"uitkControlLabel\";\n\nexport const ControlLabel = forwardRef<HTMLLabelElement, ControlLabelProps>(\n  (\n    { children, className, disabled, label, labelPlacement = \"left\", ...other },\n    ref\n  ) => {\n    return (\n      <label\n        className={classnames(\n          baseName,\n          {\n            [`${baseName}-disabled`]: disabled,\n          },\n          className\n        )}\n        ref={ref}\n        {...other}\n      >\n        {labelPlacement === \"left\" && (\n          <span className={`${baseName}-label`}>{label}</span>\n        )}\n        {children}\n        {labelPlacement === \"right\" && (\n          <span className={`${baseName}-labelRight`}>{label}</span>\n        )}\n      </label>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}