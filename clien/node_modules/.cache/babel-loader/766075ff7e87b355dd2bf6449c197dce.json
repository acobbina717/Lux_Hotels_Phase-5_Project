{"ast":null,"code":"import { useContext } from 'react';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect.js';\nimport 'react/jsx-runtime';\nimport 'classnames';\nimport '../aria-announcer/AriaAnnouncerContext.js';\nimport 'warning';\nimport '../theme/Theme.js';\nimport { FormFieldContext } from './FormFieldContext.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nfunction useFormFieldProps() {\n  let {\n    focusVisible\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  const _a = useContext(FormFieldContext) || {},\n        {\n    setFocused\n  } = _a,\n        formFieldProps = __objRest(_a, [\"setFocused\"]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (focusVisible !== void 0 && setFocused) {\n      setFocused(focusVisible);\n    }\n  }, [focusVisible, setFocused]);\n  return __spreadValues({\n    setFocused\n  }, formFieldProps);\n}\n\nexport { useFormFieldProps };","map":{"version":3,"mappings":";;;;;;;;AAAA,IAASA,kBAAkB,eAA3B;AACA,IAASC,kDAAT;AACA,IAASC,qBAAgB,CAA+BC,SAA/CD,CAA+CE,cAAxD;AAMA,IAAOC,YAASC,oBACdC,oBADF;;IAGEC,eAAwD;EAAAC;EAAAC;EAAAC;EAAAC;AAAA;;AACxD,kBAAQC,IAAUC,CAAVD,EAAYE,CAAZF,KAA6B;EAErCZ,2BAAyB,EAAzBA,GACE,gBAAgB,KAAhB,CAAgBc,CAAhB,EAAqBC,IAArB,kBACY,IAAaC,IAAb,EAAaF,OAAb;;EACX,8BACA;QAAaV,4BAAEQ,eAAU,kBAAVA;EAAW;SAEtBC;CARP;;AAUE,aAAiB;MACjBI;;EACH;;;;;;CAFG","names":["useContext","useIsomorphicLayoutEffect","FormFieldContext","prototype","hasOwnProperty","__propIsEnum","useFormFieldProps","focusVisible","__defNormalProp","enumerable","configurable","writable","value","setFocused","a","b","undefined","prop","target"],"sources":["/Users/forgi/Development/code/phase-5/lux_nyc_final_project/lux_nyc_react_frontend/node_modules/@jpmorganchase/uitk-core/dist-es/packages/core/src/src/form-field-context/useFormFieldProps.ts"],"sourcesContent":["import { useContext } from \"react\";\nimport { useIsomorphicLayoutEffect } from \"../utils\";\nimport { FormFieldContext, FormFieldContextValue } from \"./FormFieldContext\";\n\ninterface useFormFieldPropsProps {\n  focusVisible?: boolean;\n}\n\nexport function useFormFieldProps({\n  focusVisible,\n}: useFormFieldPropsProps = {}): Partial<FormFieldContextValue> {\n  // TODO should this be a separate value for FocusVisible\n  const { setFocused, ...formFieldProps } = useContext(FormFieldContext) || {};\n\n  useIsomorphicLayoutEffect(() => {\n    if (focusVisible !== undefined && setFocused) {\n      setFocused(focusVisible);\n    }\n  }, [focusVisible, setFocused]);\n\n  return {\n    setFocused,\n    ...formFieldProps,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}